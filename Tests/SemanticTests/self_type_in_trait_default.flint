// RUN: %flintc %s --verify

struct trait Trait {
  mutating func function()

  // NOT YET IMPLEMENTED (#21) mutating func notDefaulted(thisParam: inout Self)

  // Accept Self parameter and return Self type
  mutating func defaulted(thisParam: inout Self) -> Self {
    // Variable declaration
    var this: Self = self
    // Variable assignment
    this = self
    // Function call to Self (trait)
    this.function()
    // Function self
    thisParam.function()
    // Self return
    return self
  }
}

// An implementation of struct trait Trait
struct Implementation: Trait {
  // Implementation of trait function calling defaulted function with self param
  mutating func function() {
    defaulted(&self)
  }

  // Self should only be allowed in traits
  func selfNotAllowedHere(no: Self) {}
}

contract A { }

A :: a <- (any) {
  public init() {}
}
