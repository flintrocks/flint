// RUN: %flintc %s --dump-ast | %FileCheck %s --prefix CHECK-AST

contract Wallet {
  var owner: Address
  var contents: Int = 0
}

Wallet :: (any) {
  public init(owner: Address) {
    self.owner = owner
  }

  public func factorial(n: Int) -> Int {

// CHECK-AST: IfStatement
// CHECK-AST:   BracketedExpression
// CHECK-AST:    BinaryExpression
// CHECK-AST:      identifier "n"
// CHECK-AST:      <
// CHECK-AST:      literal 2
// CHECK-AST:  ReturnStatement
// CHECK-AST:    literal 1
    if (n < 2) { return 1 }

// CHECK-AST:  ReturnStatement
// CHECK-AST:    BinaryExpression
// CHECK-AST:      identifier "n"
// CHECK-AST:      *
// CHECK-AST:      FunctionCall
// CHECK-AST:        identifier "factorial"
// CHECK-AST:          BinaryExpression
// CHECK-AST:            n
// CHECK-AST:            -
// CHECK-AST:            1
    return n * factorial(n - 1)
  }

// CHECK-AST: IfStatement
// CHECK-AST:   true
// CHECK-AST:    VariableDeclaration
// CHECK-AST:   ElseBlock
// CHECK-AST:    VariableDeclaration
  func foo() {
    if true {
      var a: Int = 2
    } else {
      var b: Int = 3
    }
  }
}
